// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Glob = require("glob");
var Belt_Option = require("rescript/lib/js/belt_Option.js");

function readFile(filePath) {
  return new Promise((function (resolve, reject) {
                var onRead = function (error, content) {
                  if (error == null) {
                    if (content == null) {
                      return reject({
                                  RE_EXN_ID: "Failure",
                                  _1: "Error reading file " + filePath + " (returned null)"
                                });
                    } else {
                      return resolve(content);
                    }
                  } else {
                    return reject({
                                RE_EXN_ID: "Failure",
                                _1: "Error reading file " + filePath
                              });
                  }
                };
                Fs.readFile(filePath, "utf-8", onRead);
                
              }));
}

function writeFile(filePath, content) {
  return new Promise((function (resolve, reject) {
                Fs.writeFile(filePath, content, (function (error) {
                        if (error == null) {
                          return resolve(undefined);
                        } else {
                          return reject({
                                      RE_EXN_ID: "Failure",
                                      _1: "Error writing file " + filePath
                                    });
                        }
                      }));
                
              }));
}

function glob(glob$1) {
  return new Promise((function (resolve, reject) {
                Glob(glob$1, (function (error, paths) {
                        if (error == null) {
                          if (paths == null) {
                            return reject({
                                        RE_EXN_ID: "Failure",
                                        _1: "Error reading glob: " + glob$1 + ". Reason: Unknown"
                                      });
                          } else {
                            return resolve(paths);
                          }
                        }
                        var reason = Belt_Option.getWithDefault(error.message, "Unknown");
                        return reject({
                                    RE_EXN_ID: "Failure",
                                    _1: "Error reading glob: " + glob$1 + ". Reason: " + reason
                                  });
                      }));
                
              }));
}

exports.readFile = readFile;
exports.writeFile = writeFile;
exports.glob = glob;
/* fs Not a pure module */
